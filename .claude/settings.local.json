{
  "permissions": {
    "allow": [
      "Bash(grep:*)",
      "Bash(mkdir:*)",
      "Bash(find:*)",
      "Bash(rg:*)",
      "Bash(python -m pytest tests/test_dtypes.py -v)",
      "Bash(python3 -m pytest tests/test_dtypes.py -v)",
      "Bash(python3:*)",
      "Bash(ls:*)",
      "Bash(chmod:*)",
      "Bash(docker logs:*)",
      "Bash(docker compose logs:*)",
      "Bash(docker compose build:*)",
      "Bash(cargo check:*)",
      "WebFetch(domain:docs.rs)",
      "Bash(docker compose up:*)",
      "Bash(cargo:*)",
      "Bash(rustc --version)",
      "Bash(rm:*)",
      "Bash(source:*)",
      "Bash(timeout 30 cargo check --bin era_detector)",
      "Bash(rustc:*)",
      "Bash(docker compose:*)",
      "Bash(docker exec:*)",
      "Bash(pgrep:*)",
      "Bash(mv:*)",
      "Bash(cp:*)",
      "Bash(tree:*)",
      "Bash(git*)",
      "Bash(git status:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(gh:*)",
      "Bash(gh status:*)",
      "Bash(gh issue:*)",
      "Bash(gh pr:*)",
      "Bash(gh repo:*)",
      "Bash(pip show:*)",
      "Bash(python:*)",
      "Bash(pip install:*)",
      "Bash(timeout 300 cargo check --quiet)",
      "Bash(timeout 30 cargo check --message-format=short 2 >& 1)",
      "Bash(ruff check:*)",
      "Bash(uv pip list:*)",
      "Bash(docker build:*)",
      "Bash(./run_feature_extraction_simple.sh:*)",
      "Bash(./run_feature_extraction_only.sh:*)",
      "Bash(/home/max/Github/Proactive-thesis/DataIngestion/feature_extraction/run_standalone.sh:*)",
      "Bash(docker run:*)",
      "Bash(/home/max/Github/Proactive-thesis/DataIngestion/feature_extraction/run_feature_direct.sh:*)",
      "Bash(pipx:*)",
      "Bash(export PATH=\"$HOME/.local/bin:$PATH\")",
      "Bash(ruff format:*)",
      "Bash(timeout 300 docker logs -f model_builder_all_objectives 2 >& 1)",
      "Bash(./cleanup_duplicates.sh)",
      "Bash(./organize_feature_docs.sh:*)",
      "Bash(./final_cleanup.sh)",
      "Bash(./cleanup_utility_scripts.sh:*)",
      "Bash(awk:*)",
      "Bash(./run_cloud_simulation.sh:*)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": false
}