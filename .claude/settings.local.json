{
  "permissions": {
    "allow": [
      "Bash(grep:*)",
      "Bash(mkdir:*)",
      "Bash(find:*)",
      "Bash(rg:*)",
      "Bash(python -m pytest tests/test_dtypes.py -v)",
      "Bash(python3 -m pytest tests/test_dtypes.py -v)",
      "Bash(python3:*)",
      "Bash(ls:*)",
      "Bash(chmod:*)",
      "Bash(docker logs:*)",
      "Bash(docker compose logs:*)",
      "Bash(docker compose build:*)",
      "Bash(cargo check:*)",
      "WebFetch(domain:docs.rs)",
      "Bash(docker compose up:*)",
      "Bash(cargo:*)",
      "Bash(rustc --version)",
      "Bash(rm:*)",
      "Bash(source:*)",
      "Bash(timeout 30 cargo check --bin era_detector)",
      "Bash(rustc:*)",
      "Bash(docker compose:*)",
      "Bash(docker exec:*)",
      "Bash(pgrep:*)",
      "Bash(mv:*)",
      "Bash(cp:*)",
      "Bash(tree:*)",
      "Bash(git*)",
      "Bash(git status:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(gh:*)",
      "Bash(gh status:*)",
      "Bash(gh issue:*)",
      "Bash(gh pr:*)",
      "Bash(gh repo:*)",
      "Bash(pip show:*)",
      "Bash(python:*)",
      "Bash(pip install:*)",
      "Bash(timeout 300 cargo check --quiet)",
      "Bash(timeout 30 cargo check --message-format=short 2 >& 1)",
      "Bash(ruff check:*)",
      "Bash(uv pip list:*)",
      "Bash(docker build:*)",
      "Bash(./run_feature_extraction_simple.sh:*)",
      "Bash(./run_feature_extraction_only.sh:*)",
      "Bash(/home/max/Github/Proactive-thesis/DataIngestion/feature_extraction/run_standalone.sh:*)",
      "Bash(docker run:*)",
      "Bash(/home/max/Github/Proactive-thesis/DataIngestion/feature_extraction/run_feature_direct.sh:*)",
      "Bash(pipx:*)",
      "Bash(export PATH=\"$HOME/.local/bin:$PATH\")",
      "Bash(ruff format:*)",
      "Bash(timeout 300 docker logs -f model_builder_all_objectives 2 >& 1)",
      "Bash(./cleanup_duplicates.sh)",
      "Bash(./organize_feature_docs.sh:*)",
      "Bash(./final_cleanup.sh)",
      "Bash(./cleanup_utility_scripts.sh:*)",
      "Bash(awk:*)",
      "Bash(./run_cloud_simulation.sh:*)",
      "Bash(docker network:*)",
      "WebFetch(domain:lib.rs)",
      "Bash(/home/max/.local/bin/ruff check extract_features_enhanced.py --fix)",
      "Bash(/home/max/.local/bin/ruff check feature_utils.py --fix)",
      "Bash(/home/max/.local/bin/ruff check feature_utils.py extract_features_enhanced.py)",
      "Bash(/home/max/.local/bin/ruff check . --statistics)",
      "Bash(timeout 60 cargo check 2 >& 1)",
      "Bash(for file in *.rs)",
      "Bash(do sed -i 's/use cudarc::driver::{DevicePtr, LaunchAsync, LaunchConfig};/use cudarc::{CudaSlice, LaunchConfig};/g' \"$file\")",
      "Bash(done)",
      "Bash(do sed -i 's/use cudarc::{CudaSlice, LaunchConfig};/use cudarc::driver::safe::{CudaSlice, LaunchConfig};/g' \"$file\")",
      "Bash(docker pull:*)",
      "Bash(sed:*)",
      "Bash(docker cp:*)",
      "Bash(DATABASE_URL=\"postgresql://postgres:postgres@localhost:5432/postgres\" RUST_LOG=\"gpu_feature_extraction=debug\" DISABLE_GPU=\"true\" cargo run -- --sparse-mode --start-date \"2014-06-01\" --end-date \"2014-06-07\" --batch-size 24)",
      "Bash(DATABASE_URL=\"postgresql://postgres:postgres@localhost:5432/postgres\" cargo run --bin test_sparse 2 >& 1)",
      "Bash(DATABASE_URL=postgresql://postgres:postgres@localhost:5432/postgres RUST_LOG=gpu_feature_extraction=info SPARSE_MODE=true DISABLE_GPU=true cargo run -- --sparse-mode --start-date 2014-06-01 --end-date 2014-06-02 --batch-size 12)",
      "Bash(DATABASE_URL=postgresql://postgres:postgres@localhost:5432/postgres RUST_LOG=gpu_feature_extraction=info SPARSE_MODE=true DISABLE_GPU=true cargo run --bin gpu_feature_extraction -- --sparse-mode --start-date 2014-06-01 --end-date 2014-06-02 --batch-size 12)",
      "Bash(/mnt/c/Users/fhj88/Documents/Github/Proactive-thesis/DataIngestion/monitor_sparse_build.sh:*)",
      "Bash(./run_sparse_test.sh:*)",
      "Bash(./test_sparse_pipeline.sh)",
      "Bash(./test_sparse_comprehensive.sh:*)",
      "Bash(./test_sparse_simple.sh:*)",
      "Bash(./fix_sparse_bugs.sh:*)",
      "Bash(./test_sparse_pipeline_run.sh:*)",
      "Bash(cat:*)",
      "Bash(DISABLE_GPU=true docker compose -f docker-compose.sparse-full.yml up --build)",
      "Bash(./test_pipeline_flow.sh:*)",
      "Bash(NUM_RUNS=1 ./run_pipeline_experiment.sh)",
      "Bash(./quick_performance_test.sh:*)",
      "Bash(./run_comparison_experiment.sh:*)",
      "Bash(./validate_gpu_setup.sh)",
      "Bash(docker system prune:*)",
      "Bash(./quick_gpu_test.sh:*)",
      "Bash(sudo apt:*)",
      "Bash(sudo apt install:*)",
      "Bash(./test_enhanced_pipeline.sh:*)",
      "Bash(./check_enhanced_prerequisites.sh:*)",
      "Bash(./quick_benchmark.sh:*)",
      "Bash(./simple_cpu_gpu_test.sh:*)",
      "Bash(DISABLE_GPU=true docker compose -f docker-compose.sparse.yml run --rm sparse_pipeline --sparse-mode --start-date 2014-01-01 --end-date 2014-01-31 --batch-size 24)",
      "Bash(DISABLE_GPU=false docker compose -f docker-compose.sparse.yml run --rm sparse_pipeline --sparse-mode --start-date 2014-01-01 --end-date 2014-01-31 --batch-size 24)",
      "Bash(timeout 60 cargo build 2 >& 1)",
      "Bash(timeout 60 cargo build --release --bin gpu_feature_extraction 2 >& 1)",
      "Bash(docker compose -f docker-compose.enhanced.yml exec db psql -U postgres -c \"SELECT COUNT(*) FROM enhanced_sparse_features;\")",
      "Bash(docker compose -f docker-compose.enhanced.yml exec db psql -U postgres -c \"SELECT COUNT(*) FROM enhanced_sparse_features;\")",
      "Bash(./target/release/gpu_feature_extraction:*)",
      "Bash(./test_enhanced_pipeline_quick.sh:*)",
      "Bash(/usr/local/bin/cargo build --release --bin gpu_feature_extraction)",
      "Bash(docker:*)",
      "Bash(./run_full_pipeline_experiment.sh:*)",
      "Bash(./test_pipeline_stages.sh:*)",
      "Bash(DATABASE_URL=\"postgresql://postgres:postgres@localhost:15432/postgres\" python test_evaluator_fix.py)",
      "Bash(DATABASE_URL=\"postgresql://postgres:postgres@localhost:15432/postgres\" python3 test_evaluator_fix.py)",
      "Bash(DATABASE_URL=\"postgresql://postgres:postgres@localhost:5432/postgres\" python3 extract_results.py)",
      "Bash(./run_multiple_experiments.sh:*)",
      "Bash(pip3 install:*)",
      "Bash(for i in {1..5})",
      "Bash(do echo \"=== CPU Run $i ===\")",
      "Bash(do echo \"=== GPU Run $i ===\")"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": false
}