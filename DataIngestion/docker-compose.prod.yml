# Production-specific overrides for the pipeline
# Usage: docker compose -f docker-compose.yml -f docker-compose.production.yml up

services:
  # Database with production settings
  db:
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD}  # Should come from secure env
    volumes:
      # Use named volume for production persistence
      - postgres-prod-data:/var/lib/postgresql/data
    # Production health checks
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 3

  # Remove pgAdmin in production
  pgadmin:
    profiles: ["debug"]  # Only run with --profile debug

  # Production-optimized GPU feature extraction
  gpu_feature_extraction_level_a:
    restart: on-failure:3
    environment:
      RUST_LOG: "warn"  # Reduce logging verbosity
      # Production batch sizes - tuned for stability
      GPU_BATCH_SIZE_A: "250"
    command: [
      "--era-level", "A",
      "--min-era-rows", "2000",  # Higher threshold for production
      "--batch-size", "250",
      "--features-table", "gpu_features_level_a"
    ]

  gpu_feature_extraction_level_b:
    restart: on-failure:3
    environment:
      RUST_LOG: "warn"
      GPU_BATCH_SIZE_B: "500"
    command: [
      "--era-level", "B",
      "--min-era-rows", "1000",  # Higher threshold for production
      "--batch-size", "500",
      "--features-table", "gpu_features_level_b"
    ]

  gpu_feature_extraction_level_c:
    restart: on-failure:3
    environment:
      RUST_LOG: "warn"
      GPU_BATCH_SIZE_C: "50"
    command: [
      "--era-level", "C",
      "--min-era-rows", "10000",  # Much higher to reduce 850K eras
      "--batch-size", "50",
      "--features-table", "gpu_features_level_c"
    ]

  # Model builder with production settings
  model_builder:
    restart: on-failure:3
    environment:
      # Production MLflow tracking
      MLFLOW_TRACKING_URI: ${MLFLOW_TRACKING_URI}
      # Use GPU-optimized features tables
      FEATURE_TABLES: "gpu_features_level_a,gpu_features_level_b,gpu_features_level_c"
    volumes:
      # Production model storage
      - /opt/greenhouse/models:/models
      - /opt/greenhouse/mlflow:/mlflow

  # MOEA optimizer for production
  moea_optimizer_gpu:
    restart: on-failure:3
    environment:
      CONFIG_PATH: /app/config/moea_config_prod.toml
    volumes:
      # Production results storage
      - /opt/greenhouse/moea_results:/app/results:rw

# Production volumes
volumes:
  postgres-prod-data:
    external: true  # Should be created manually for production