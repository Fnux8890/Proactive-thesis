services:
  # Use the existing TimescaleDB service from main docker-compose.yml
  # This ensures we're using the same database with all tables already created
  
  # Redis for task queue
  redis:
    image: redis:7-alpine
    command: redis-server --maxmemory 4gb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - proactive-network

  # PgBouncer for connection pooling  
  pgbouncer:
    image: pgbouncer/pgbouncer:latest
    environment:
      - DATABASES_HOST=db
      - DATABASES_PORT=5432
      - DATABASES_DATABASE=postgres
      - DATABASES_USER=postgres
      - DATABASES_PASSWORD=postgres
      - POOL_MODE=transaction
      - MAX_CLIENT_CONN=1000
      - DEFAULT_POOL_SIZE=25
      - MIN_POOL_SIZE=5
      - RESERVE_POOL_SIZE=5
    ports:
      - "6432:6432"
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    networks:
      - proactive-network

  # Coordinator service
  parallel-coordinator:
    build:
      context: ./feature_extraction
      dockerfile: parallel/coordinator.dockerfile
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:postgres@pgbouncer:6432/postgres
      - GPU_WORKERS=4
      - CPU_WORKERS=8
      - GPU_THRESHOLD=1000000
      - ERA_LEVEL=B
    depends_on:
      redis:
        condition: service_healthy
      pgbouncer:
        condition: service_started
      # Wait for preprocessing to complete
      preprocessing:
        condition: service_completed_successfully
      era_detector:
        condition: service_completed_successfully
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 8G
    volumes:
      - ./feature_extraction/parallel:/app/parallel
      - ./logs:/app/logs
    networks:
      - proactive-network

  # GPU Workers (4 containers) - using same image as feature_extraction but with parallel code
  parallel-gpu-worker-0:
    build:
      context: ./feature_extraction
      dockerfile: parallel/gpu_worker.dockerfile
    environment:
      - WORKER_ID=gpu-0
      - CUDA_VISIBLE_DEVICES=0
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:postgres@pgbouncer:6432/postgres
    runtime: nvidia
    depends_on:
      - redis
      - pgbouncer
      - parallel-coordinator
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['0']
              capabilities: [gpu]
        limits:
          cpus: '4'
          memory: 40G
    volumes:
      - ./feature_extraction/parallel:/app/parallel
      - ./feature_extraction/feature:/app/feature
      - ./logs:/app/logs
    networks:
      - proactive-network

  parallel-gpu-worker-1:
    build:
      context: ./feature_extraction
      dockerfile: parallel/gpu_worker.dockerfile
    environment:
      - WORKER_ID=gpu-1
      - CUDA_VISIBLE_DEVICES=1
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:postgres@pgbouncer:6432/postgres
    runtime: nvidia
    depends_on:
      - redis
      - pgbouncer
      - parallel-coordinator
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['1']
              capabilities: [gpu]
        limits:
          cpus: '4'
          memory: 40G
    volumes:
      - ./feature_extraction/parallel:/app/parallel
      - ./feature_extraction/feature:/app/feature
      - ./logs:/app/logs
    networks:
      - proactive-network

  parallel-gpu-worker-2:
    build:
      context: ./feature_extraction
      dockerfile: parallel/gpu_worker.dockerfile
    environment:
      - WORKER_ID=gpu-2
      - CUDA_VISIBLE_DEVICES=2
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:postgres@pgbouncer:6432/postgres
    runtime: nvidia
    depends_on:
      - redis
      - pgbouncer
      - parallel-coordinator
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['2']
              capabilities: [gpu]
        limits:
          cpus: '4'
          memory: 40G
    volumes:
      - ./feature_extraction/parallel:/app/parallel
      - ./feature_extraction/feature:/app/feature
      - ./logs:/app/logs
    networks:
      - proactive-network

  parallel-gpu-worker-3:
    build:
      context: ./feature_extraction
      dockerfile: parallel/gpu_worker.dockerfile
    environment:
      - WORKER_ID=gpu-3
      - CUDA_VISIBLE_DEVICES=3
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:postgres@pgbouncer:6432/postgres
    runtime: nvidia
    depends_on:
      - redis
      - pgbouncer
      - parallel-coordinator
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['3']
              capabilities: [gpu]
        limits:
          cpus: '4'
          memory: 40G
    volumes:
      - ./feature_extraction/parallel:/app/parallel
      - ./feature_extraction/feature:/app/feature
      - ./logs:/app/logs
    networks:
      - proactive-network

  # CPU Workers (8 containers)
  parallel-cpu-worker-0:
    build:
      context: ./feature_extraction
      dockerfile: parallel/cpu_worker.dockerfile
    environment:
      - WORKER_ID=cpu-0
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:postgres@pgbouncer:6432/postgres
      - TSFRESH_N_JOBS=4
    depends_on:
      - redis
      - pgbouncer
      - parallel-coordinator
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 16G
    volumes:
      - ./feature_extraction/parallel:/app/parallel
      - ./feature_extraction/feature:/app/feature
      - ./logs:/app/logs
    networks:
      - proactive-network

  parallel-cpu-worker-1:
    build:
      context: ./feature_extraction
      dockerfile: parallel/cpu_worker.dockerfile
    environment:
      - WORKER_ID=cpu-1
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:postgres@pgbouncer:6432/postgres
      - TSFRESH_N_JOBS=4
    depends_on:
      - redis
      - pgbouncer
      - parallel-coordinator
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 16G
    volumes:
      - ./feature_extraction/parallel:/app/parallel
      - ./feature_extraction/feature:/app/feature
      - ./logs:/app/logs
    networks:
      - proactive-network

  parallel-cpu-worker-2:
    build:
      context: ./feature_extraction
      dockerfile: parallel/cpu_worker.dockerfile
    environment:
      - WORKER_ID=cpu-2
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:postgres@pgbouncer:6432/postgres
      - TSFRESH_N_JOBS=4
    depends_on:
      - redis
      - pgbouncer
      - parallel-coordinator
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 16G
    volumes:
      - ./feature_extraction/parallel:/app/parallel
      - ./feature_extraction/feature:/app/feature
      - ./logs:/app/logs
    networks:
      - proactive-network

  parallel-cpu-worker-3:
    build:
      context: ./feature_extraction
      dockerfile: parallel/cpu_worker.dockerfile
    environment:
      - WORKER_ID=cpu-3
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:postgres@pgbouncer:6432/postgres
      - TSFRESH_N_JOBS=4
    depends_on:
      - redis
      - pgbouncer
      - parallel-coordinator
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 16G
    volumes:
      - ./feature_extraction/parallel:/app/parallel
      - ./feature_extraction/feature:/app/feature
      - ./logs:/app/logs
    networks:
      - proactive-network

  parallel-cpu-worker-4:
    build:
      context: ./feature_extraction
      dockerfile: parallel/cpu_worker.dockerfile
    environment:
      - WORKER_ID=cpu-4
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:postgres@pgbouncer:6432/postgres
      - TSFRESH_N_JOBS=4
    depends_on:
      - redis
      - pgbouncer
      - parallel-coordinator
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 16G
    volumes:
      - ./feature_extraction/parallel:/app/parallel
      - ./feature_extraction/feature:/app/feature
      - ./logs:/app/logs
    networks:
      - proactive-network

  parallel-cpu-worker-5:
    build:
      context: ./feature_extraction
      dockerfile: parallel/cpu_worker.dockerfile
    environment:
      - WORKER_ID=cpu-5
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:postgres@pgbouncer:6432/postgres
      - TSFRESH_N_JOBS=4
    depends_on:
      - redis
      - pgbouncer
      - parallel-coordinator
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 16G
    volumes:
      - ./feature_extraction/parallel:/app/parallel
      - ./feature_extraction/feature:/app/feature
      - ./logs:/app/logs
    networks:
      - proactive-network

  parallel-cpu-worker-6:
    build:
      context: ./feature_extraction
      dockerfile: parallel/cpu_worker.dockerfile
    environment:
      - WORKER_ID=cpu-6
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:postgres@pgbouncer:6432/postgres
      - TSFRESH_N_JOBS=4
    depends_on:
      - redis
      - pgbouncer
      - parallel-coordinator
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 16G
    volumes:
      - ./feature_extraction/parallel:/app/parallel
      - ./feature_extraction/feature:/app/feature
      - ./logs:/app/logs
    networks:
      - proactive-network

  parallel-cpu-worker-7:
    build:
      context: ./feature_extraction
      dockerfile: parallel/cpu_worker.dockerfile
    environment:
      - WORKER_ID=cpu-7
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:postgres@pgbouncer:6432/postgres
      - TSFRESH_N_JOBS=4
    depends_on:
      - redis
      - pgbouncer
      - parallel-coordinator
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 16G
    volumes:
      - ./feature_extraction/parallel:/app/parallel
      - ./feature_extraction/feature:/app/feature
      - ./logs:/app/logs
    networks:
      - proactive-network

volumes:
  redis-data:

networks:
  proactive-network:
    external: true