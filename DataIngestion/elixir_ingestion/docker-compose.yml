services:
  web_service:
    build:
      context: ./web_service
      dockerfile: Dockerfile.web
    restart: always
    ports:
      - "4000:4000"
    depends_on:
      - redis
    environment:
      - MIX_ENV=prod
      - PORT=4000
      - SECRET_KEY_BASE=UY7V0F6j2DiYYeX8PZgYnb0jF2zMcPTCuY8Tk4J5en5B9lSFxQsOu/jpMjXvDqPj
      - PHX_SERVER=true
      - REDIS_URL=redis://redis:6379
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    volumes:
      - ./results:/app/results
      - ../../Data:/app/data
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  elixir_data_processor:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./results:/app/results
      - ../../Data:/data
    environment:
      - MIX_ENV=prod
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis-data:/data
    networks:
      - ingestion-net

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  elixir_pipeline:
    build:
      context: ./pipeline
      dockerfile: Dockerfile.pipeline
    volumes:
      - ./results:/app/results
      - ../../Data:/app/data:ro
    depends_on:
      - redis
      - db
    environment:
      DATA_SOURCE_PATH: /app/data
      REDIS_URL: redis://redis:6379
      MIX_ENV: prod
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
    networks:
      - ingestion-net

volumes:
  postgres-data:
  redis-data:

networks:
  ingestion-net:
    name: ingestion-net
    driver: bridge

