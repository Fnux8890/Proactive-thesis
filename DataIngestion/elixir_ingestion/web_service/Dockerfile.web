# Build stage
FROM elixir:1.18-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache build-base git nodejs npm

# Install hex and rebar separately
RUN mix local.hex --force
RUN mix local.rebar --force

# Set environment variables for building
ENV MIX_ENV=prod

# Copy application files
COPY mix.exs mix.lock ./
COPY config config/
COPY lib lib/
COPY priv priv/
COPY assets assets/

# Fetch and compile dependencies
RUN mix deps.get --only prod
RUN mix deps.compile

# Compile assets
WORKDIR /app/assets
RUN npm install
# Consider using `npm ci` for faster, more reliable builds if you have package-lock.json
# RUN npm ci
RUN npm run deploy
WORKDIR /app
RUN mix phx.digest

# Build the Phoenix release
RUN mix release

# Runtime stage
FROM alpine:latest

# Install runtime dependencies
RUN apk add --no-cache bash openssl libstdc++ ncurses-libs

WORKDIR /app

# Create results directory if needed (adjust path if necessary)
RUN mkdir -p /app/results

# Copy the release built in the previous stage
COPY --from=builder /app/_build/prod/rel/web_service .

# Expose the port the application listens on
EXPOSE 4000

# Define the entrypoint
ENTRYPOINT ["/app/bin/web_service", "start"]
