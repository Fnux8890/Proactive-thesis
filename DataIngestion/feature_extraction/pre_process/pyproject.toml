[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "greenhouse-preprocessing"
version = "0.1.0"
description = "Preprocessing pipeline for greenhouse sensor data"
authors = [{name = "Greenhouse Team"}]
requires-python = ">=3.11"
readme = "README.md"
license = {text = "MIT"}
dependencies = [
    "pandas>=2.2.0",
    "numpy>=1.26.0",
    "scipy>=1.12.0",
    "sqlalchemy>=2.0.0",
    "psycopg2-binary>=2.9.9",
    "python-dotenv>=1.0.0",
    "tsfresh>=0.20.2",
    "polars>=0.20.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-watch>=4.2.0",
    "hypothesis>=6.92.0",
    "mypy>=1.8.0",
    "ruff>=0.1.0",
    "pandas-stubs>=2.1.0",
    "types-requests>=2.31.0",
    "psycopg2-binary-stubs>=0.0.1",
    "sqlalchemy-stubs>=0.4",
    "ipdb>=0.13.13",
    "pre-commit>=3.5.0"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
strict_optional = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tsfresh.*"
ignore_missing_imports = true

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.isort]
known-first-party = ["processing_steps", "database_operations", "data_preparation_utils"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-ra -q --strict-markers --strict-config"
markers = [
    'slow: marks tests as slow (deselect with "-m not slow")',
    'integration: marks tests as integration tests',
    'unit: marks tests as unit tests',
]

[tool.coverage.run]
source = ["."]  
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstract",
]

[tool.bandit]
skips = ["B101", "B601"]  # Skip assert_used and paramiko tests
exclude_dirs = ["tests", "scripts"]

[tool.pydocstyle]
convention = "google"
add-ignore = ["D100", "D104"]  # Missing docstring in public module/package
match = "(?!test_).*\\.py"  # Don't check test files