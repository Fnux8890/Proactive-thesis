[tool.ruff]
line-length = 120
target-version = "py310"
extend-include = ["*.ipynb"]

select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]

ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "B905",  # zip() without an explicit strict= parameter
    "SIM108", # Use ternary operator instead of if-else
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py
"tests/*" = ["ARG"]       # Allow unused arguments in tests

[tool.ruff.isort]
known-first-party = ["feature_extraction", "db", "features", "pre_process"]
combine-as-imports = true

[tool.black]
line-length = 120
target-version = ["py310"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | data
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Start permissive
ignore_missing_imports = true
follow_imports = "skip"
no_implicit_reexport = true

# Strict checks (enable gradually)
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "feature_extraction"
version = "0.1.0"
description = "GPU-accelerated feature extraction pipeline"
requires-python = ">=3.10"
dependencies = [
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "sqlalchemy>=2.0.0",
    "psycopg2-binary>=2.9.0",
    "tsfresh>=0.20.0",
    "scikit-learn>=1.3.0",
]

[project.optional-dependencies]
gpu = [
    "cupy-cuda11x>=12.0.0",
    "cudf-cu11>=23.10.0",
    "cuml-cu11>=23.10.0",
]
dev = [
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]