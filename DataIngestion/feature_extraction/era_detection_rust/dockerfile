# ---------- deps stage ----------
    FROM rust:alpine AS deps
    WORKDIR /app
    RUN apk add --no-cache build-base
    COPY Cargo.toml Cargo.lock ./
    RUN mkdir src && echo 'fn main() {}' > src/main.rs
    RUN cargo build --release
    RUN rm -rf src                   # keep only target/
    
    # ---------- builder stage ----------
    FROM rust:alpine AS builder
    ARG CACHEBUST
    RUN echo "Cachebuster value: $CACHEBUST"
    WORKDIR /app
    RUN apk add --no-cache build-base
    # re-use the already-compiled deps
    COPY --from=deps /app/target target
    COPY . .
    RUN cargo build --release --bin era_detector
    
    # ---------- runtime stage ----------
    FROM debian:bookworm-slim
    RUN apt-get update -qq && apt-get install -y --no-install-recommends ca-certificates && rm -rf /var/lib/apt/lists/*
    COPY --from=builder /app/target/release/era_detector /usr/local/bin/era_detector
    ENV RUST_LOG=debug
    ENV RUST_BACKTRACE=full
    # Ensure logs are not buffered
    ENV RUST_LOG_STYLE=always
    # The DB_DSN env var is set in docker-compose.yml and will be picked up automatically by clap
    # Add a simple test to verify the binary exists and is executable
    RUN era_detector --help || echo "Binary help failed"
    ENTRYPOINT ["era_detector"]
    # No CMD needed - the default table name "preprocessed_features" in the Rust code is correct
    