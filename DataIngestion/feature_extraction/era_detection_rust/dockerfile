# ---------- deps stage ----------
FROM rust:alpine AS deps
WORKDIR /app

# 1️⃣ Copy manifests only and build *dependencies* once
COPY Cargo.toml Cargo.lock ./
RUN mkdir src && echo 'fn main() {}' > src/main.rs
RUN cargo build --release          # compiles deps into /app/target
RUN rm -rf src                     # we don't need dummy src any longer

# ---------- builder stage ----------
FROM rust:alpine AS builder
WORKDIR /app

# 2️⃣ Re-use the cached target directory, add real code, build final binary
COPY --from=deps /app/target target
COPY . .                            # Cargo.toml + real src/
RUN cargo build --release --bin era_detector

# ---------- runtime stage ----------
FROM debian:bookworm-slim
RUN apt-get update -qq \
 && apt-get install -y --no-install-recommends ca-certificates \
 && rm -rf /var/lib/apt/lists/*

COPY --from=builder /app/target/release/era_detector /usr/local/bin/era_detector

ENV RUST_LOG=trace
ENTRYPOINT ["era_detector"]

# Default arguments (unchanged from your original file ⬇︎)
CMD [
  "--input-parquet", "/app/data/shared_processed/MegaEra_All_Data_processed_segment_1.parquet",
  "--output-dir",     "/app/data/shared_processed/era_labels",
  "--output-suffix",  "docker_default_run",
  "--signal-cols",    "dli_sum,lamp_group,radiation_w_m2,co2_measured_ppm,outside_temp_c",
  "--resample-every", "5m",
  "--min-coverage",   "0.9",
  "--include-time",   "true",
  "--pelt-min-size",  "48",
  "--bocpd-lambda",   "200.0",
  "--hmm-states",     "5",
  "--hmm-iterations", "20",
  "--quant-max-val",  "250"
]

